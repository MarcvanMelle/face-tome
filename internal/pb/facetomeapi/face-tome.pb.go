// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/face-tome.proto

package facetomeapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AgeGroup int32

const (
	AgeGroup_AGE_UNKNOWN       AgeGroup = 0
	AgeGroup_AGE_INFANT        AgeGroup = 1
	AgeGroup_AGE_TODDLER       AgeGroup = 2
	AgeGroup_AGE_CHILD         AgeGroup = 3
	AgeGroup_AGE_ADOLESCANT    AgeGroup = 4
	AgeGroup_AGE_TEENAGER      AgeGroup = 5
	AgeGroup_AGE_YOUNG_ADULT   AgeGroup = 6
	AgeGroup_AGE_ADULT         AgeGroup = 7
	AgeGroup_AGE_MIDDLE_AGE    AgeGroup = 8
	AgeGroup_AGE_OLD_AGE       AgeGroup = 9
	AgeGroup_AGE_CENTIGENARIAN AgeGroup = 10
	AgeGroup_AGE_ANCIENT       AgeGroup = 11
	AgeGroup_AGE_TIMELESS      AgeGroup = 12
)

var AgeGroup_name = map[int32]string{
	0:  "AGE_UNKNOWN",
	1:  "AGE_INFANT",
	2:  "AGE_TODDLER",
	3:  "AGE_CHILD",
	4:  "AGE_ADOLESCANT",
	5:  "AGE_TEENAGER",
	6:  "AGE_YOUNG_ADULT",
	7:  "AGE_ADULT",
	8:  "AGE_MIDDLE_AGE",
	9:  "AGE_OLD_AGE",
	10: "AGE_CENTIGENARIAN",
	11: "AGE_ANCIENT",
	12: "AGE_TIMELESS",
}
var AgeGroup_value = map[string]int32{
	"AGE_UNKNOWN":       0,
	"AGE_INFANT":        1,
	"AGE_TODDLER":       2,
	"AGE_CHILD":         3,
	"AGE_ADOLESCANT":    4,
	"AGE_TEENAGER":      5,
	"AGE_YOUNG_ADULT":   6,
	"AGE_ADULT":         7,
	"AGE_MIDDLE_AGE":    8,
	"AGE_OLD_AGE":       9,
	"AGE_CENTIGENARIAN": 10,
	"AGE_ANCIENT":       11,
	"AGE_TIMELESS":      12,
}

func (x AgeGroup) String() string {
	return proto.EnumName(AgeGroup_name, int32(x))
}
func (AgeGroup) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{0}
}

type Gender int32

const (
	Gender_GEN_UNKNOWN     Gender = 0
	Gender_GEN_ADNROGYNOUS Gender = 1
	Gender_GEN_FEMALE      Gender = 2
	Gender_GEN_MALE        Gender = 3
	Gender_GEN_TRANSFEMALE Gender = 4
	Gender_GEN_TRANSMALE   Gender = 5
	Gender_GEN_UNGENDERED  Gender = 6
)

var Gender_name = map[int32]string{
	0: "GEN_UNKNOWN",
	1: "GEN_ADNROGYNOUS",
	2: "GEN_FEMALE",
	3: "GEN_MALE",
	4: "GEN_TRANSFEMALE",
	5: "GEN_TRANSMALE",
	6: "GEN_UNGENDERED",
}
var Gender_value = map[string]int32{
	"GEN_UNKNOWN":     0,
	"GEN_ADNROGYNOUS": 1,
	"GEN_FEMALE":      2,
	"GEN_MALE":        3,
	"GEN_TRANSFEMALE": 4,
	"GEN_TRANSMALE":   5,
	"GEN_UNGENDERED":  6,
}

func (x Gender) String() string {
	return proto.EnumName(Gender_name, int32(x))
}
func (Gender) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{1}
}

type RealLanguage int32

const (
	RealLanguage_LANG_UNKNOWN      RealLanguage = 0
	RealLanguage_LANG_AF           RealLanguage = 1
	RealLanguage_LANG_AR           RealLanguage = 2
	RealLanguage_LANG_CS           RealLanguage = 3
	RealLanguage_LANG_DE           RealLanguage = 4
	RealLanguage_LANG_EL           RealLanguage = 5
	RealLanguage_LANG_EN           RealLanguage = 6
	RealLanguage_LANG_ES           RealLanguage = 7
	RealLanguage_LANG_FI           RealLanguage = 8
	RealLanguage_LANG_FR           RealLanguage = 9
	RealLanguage_LANG_GA           RealLanguage = 10
	RealLanguage_LANG_HE           RealLanguage = 11
	RealLanguage_LANG_HI           RealLanguage = 12
	RealLanguage_LANG_IT           RealLanguage = 13
	RealLanguage_LANG_JA           RealLanguage = 14
	RealLanguage_LANG_KO           RealLanguage = 15
	RealLanguage_LANG_LA           RealLanguage = 16
	RealLanguage_LANG_PL           RealLanguage = 17
	RealLanguage_LANG_RU           RealLanguage = 18
	RealLanguage_LANG_SA           RealLanguage = 19
	RealLanguage_LANG_SV           RealLanguage = 20
	RealLanguage_LANG_VI           RealLanguage = 21
	RealLanguage_LANG_ZH           RealLanguage = 22
	RealLanguage_LANG_JRR_QUENYA   RealLanguage = 23
	RealLanguage_LANG_JRR_SINDAR   RealLanguage = 24
	RealLanguage_LANG_JRR_DWARVISH RealLanguage = 25
	RealLanguage_LANG_JRR_HALFLING RealLanguage = 26
)

var RealLanguage_name = map[int32]string{
	0:  "LANG_UNKNOWN",
	1:  "LANG_AF",
	2:  "LANG_AR",
	3:  "LANG_CS",
	4:  "LANG_DE",
	5:  "LANG_EL",
	6:  "LANG_EN",
	7:  "LANG_ES",
	8:  "LANG_FI",
	9:  "LANG_FR",
	10: "LANG_GA",
	11: "LANG_HE",
	12: "LANG_HI",
	13: "LANG_IT",
	14: "LANG_JA",
	15: "LANG_KO",
	16: "LANG_LA",
	17: "LANG_PL",
	18: "LANG_RU",
	19: "LANG_SA",
	20: "LANG_SV",
	21: "LANG_VI",
	22: "LANG_ZH",
	23: "LANG_JRR_QUENYA",
	24: "LANG_JRR_SINDAR",
	25: "LANG_JRR_DWARVISH",
	26: "LANG_JRR_HALFLING",
}
var RealLanguage_value = map[string]int32{
	"LANG_UNKNOWN":      0,
	"LANG_AF":           1,
	"LANG_AR":           2,
	"LANG_CS":           3,
	"LANG_DE":           4,
	"LANG_EL":           5,
	"LANG_EN":           6,
	"LANG_ES":           7,
	"LANG_FI":           8,
	"LANG_FR":           9,
	"LANG_GA":           10,
	"LANG_HE":           11,
	"LANG_HI":           12,
	"LANG_IT":           13,
	"LANG_JA":           14,
	"LANG_KO":           15,
	"LANG_LA":           16,
	"LANG_PL":           17,
	"LANG_RU":           18,
	"LANG_SA":           19,
	"LANG_SV":           20,
	"LANG_VI":           21,
	"LANG_ZH":           22,
	"LANG_JRR_QUENYA":   23,
	"LANG_JRR_SINDAR":   24,
	"LANG_JRR_DWARVISH": 25,
	"LANG_JRR_HALFLING": 26,
}

func (x RealLanguage) String() string {
	return proto.EnumName(RealLanguage_name, int32(x))
}
func (RealLanguage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{2}
}

type RaceName int32

const (
	RaceName_RACE_UNKNOWN           RaceName = 0
	RaceName_RACE_DWARF_HILL        RaceName = 1
	RaceName_RACE_DWARF_MOUNTAIN    RaceName = 2
	RaceName_RACE_ELF_HIGH          RaceName = 3
	RaceName_RACE_ELF_WOOD          RaceName = 4
	RaceName_RACE_ELF_DROW          RaceName = 5
	RaceName_RACE_HALFING_LIGHTFOOT RaceName = 6
	RaceName_RACE_HALFLING_STOUT    RaceName = 7
	RaceName_RACE_HUMAN             RaceName = 8
	RaceName_RACE_DRAGONBORN        RaceName = 9
	RaceName_RACE_GNOME_FOREST      RaceName = 10
	RaceName_RACE_GNOME_ROCK        RaceName = 11
	RaceName_RACE_HALF_ELF          RaceName = 12
	RaceName_RACE_HALF_ORC          RaceName = 13
	RaceName_RACE_TIEFLING          RaceName = 14
)

var RaceName_name = map[int32]string{
	0:  "RACE_UNKNOWN",
	1:  "RACE_DWARF_HILL",
	2:  "RACE_DWARF_MOUNTAIN",
	3:  "RACE_ELF_HIGH",
	4:  "RACE_ELF_WOOD",
	5:  "RACE_ELF_DROW",
	6:  "RACE_HALFING_LIGHTFOOT",
	7:  "RACE_HALFLING_STOUT",
	8:  "RACE_HUMAN",
	9:  "RACE_DRAGONBORN",
	10: "RACE_GNOME_FOREST",
	11: "RACE_GNOME_ROCK",
	12: "RACE_HALF_ELF",
	13: "RACE_HALF_ORC",
	14: "RACE_TIEFLING",
}
var RaceName_value = map[string]int32{
	"RACE_UNKNOWN":           0,
	"RACE_DWARF_HILL":        1,
	"RACE_DWARF_MOUNTAIN":    2,
	"RACE_ELF_HIGH":          3,
	"RACE_ELF_WOOD":          4,
	"RACE_ELF_DROW":          5,
	"RACE_HALFING_LIGHTFOOT": 6,
	"RACE_HALFLING_STOUT":    7,
	"RACE_HUMAN":             8,
	"RACE_DRAGONBORN":        9,
	"RACE_GNOME_FOREST":      10,
	"RACE_GNOME_ROCK":        11,
	"RACE_HALF_ELF":          12,
	"RACE_HALF_ORC":          13,
	"RACE_TIEFLING":          14,
}

func (x RaceName) String() string {
	return proto.EnumName(RaceName_name, int32(x))
}
func (RaceName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{3}
}

type Alignment int32

const (
	Alignment_ALIGN_UNKNOWN Alignment = 0
	Alignment_ALIGN_LG      Alignment = 1
	Alignment_ALIGN_LN      Alignment = 2
	Alignment_ALIGN_LE      Alignment = 3
	Alignment_ALIGN_NG      Alignment = 4
	Alignment_ALIGN_NN      Alignment = 5
	Alignment_ALIGN_NE      Alignment = 6
	Alignment_ALIGN_CG      Alignment = 7
	Alignment_ALIGN_CN      Alignment = 8
	Alignment_ALIGN_CE      Alignment = 9
)

var Alignment_name = map[int32]string{
	0: "ALIGN_UNKNOWN",
	1: "ALIGN_LG",
	2: "ALIGN_LN",
	3: "ALIGN_LE",
	4: "ALIGN_NG",
	5: "ALIGN_NN",
	6: "ALIGN_NE",
	7: "ALIGN_CG",
	8: "ALIGN_CN",
	9: "ALIGN_CE",
}
var Alignment_value = map[string]int32{
	"ALIGN_UNKNOWN": 0,
	"ALIGN_LG":      1,
	"ALIGN_LN":      2,
	"ALIGN_LE":      3,
	"ALIGN_NG":      4,
	"ALIGN_NN":      5,
	"ALIGN_NE":      6,
	"ALIGN_CG":      7,
	"ALIGN_CN":      8,
	"ALIGN_CE":      9,
}

func (x Alignment) String() string {
	return proto.EnumName(Alignment_name, int32(x))
}
func (Alignment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{4}
}

type Language int32

const (
	Language_LANG_CHOOSE_AGAIN Language = 0
	Language_LANG_COMMON       Language = 1
	Language_LANG_DWARVISH     Language = 2
	Language_LANG_ELVISH       Language = 3
	Language_LANG_GIANT        Language = 4
	Language_LANG_GNOMISH      Language = 5
	Language_LANG_GOBLIN       Language = 6
	Language_LANG_HALFLING     Language = 7
	Language_LANG_ORCISH       Language = 8
	Language_LANG_ABYSSAL      Language = 9
	Language_LANG_CELESTIAL    Language = 10
	Language_LANG_DRACONIC     Language = 11
	Language_LANG_DEEP         Language = 12
	Language_LANG_INFERNAL     Language = 13
	Language_LANG_PRIMORDIAL   Language = 14
	Language_LANG_SYLVAN       Language = 15
	Language_LANG_UNDERCOMMON  Language = 16
)

var Language_name = map[int32]string{
	0:  "LANG_CHOOSE_AGAIN",
	1:  "LANG_COMMON",
	2:  "LANG_DWARVISH",
	3:  "LANG_ELVISH",
	4:  "LANG_GIANT",
	5:  "LANG_GNOMISH",
	6:  "LANG_GOBLIN",
	7:  "LANG_HALFLING",
	8:  "LANG_ORCISH",
	9:  "LANG_ABYSSAL",
	10: "LANG_CELESTIAL",
	11: "LANG_DRACONIC",
	12: "LANG_DEEP",
	13: "LANG_INFERNAL",
	14: "LANG_PRIMORDIAL",
	15: "LANG_SYLVAN",
	16: "LANG_UNDERCOMMON",
}
var Language_value = map[string]int32{
	"LANG_CHOOSE_AGAIN": 0,
	"LANG_COMMON":       1,
	"LANG_DWARVISH":     2,
	"LANG_ELVISH":       3,
	"LANG_GIANT":        4,
	"LANG_GNOMISH":      5,
	"LANG_GOBLIN":       6,
	"LANG_HALFLING":     7,
	"LANG_ORCISH":       8,
	"LANG_ABYSSAL":      9,
	"LANG_CELESTIAL":    10,
	"LANG_DRACONIC":     11,
	"LANG_DEEP":         12,
	"LANG_INFERNAL":     13,
	"LANG_PRIMORDIAL":   14,
	"LANG_SYLVAN":       15,
	"LANG_UNDERCOMMON":  16,
}

func (x Language) String() string {
	return proto.EnumName(Language_name, int32(x))
}
func (Language) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{5}
}

type ClassName int32

const (
	ClassName_CLASSNAME_UNKNOWN   ClassName = 0
	ClassName_CLASSNAME_COMMONER  ClassName = 1
	ClassName_CLASSNAME_BARBARIAN ClassName = 2
	ClassName_CLASSNAME_BARD      ClassName = 3
	ClassName_CLASSNAME_CLERIC    ClassName = 4
	ClassName_CLASSNAME_DRUID     ClassName = 5
	ClassName_CLASSNAME_FIGHTER   ClassName = 6
	ClassName_CLASSNAME_MONK      ClassName = 7
	ClassName_CLASSNAME_PALADIN   ClassName = 8
	ClassName_CLASSNAME_RANGER    ClassName = 9
	ClassName_CLASSNAME_ROGUE     ClassName = 10
	ClassName_CLASSNAME_SORCEROR  ClassName = 11
	ClassName_CLASSNAME_WARLOCK   ClassName = 12
	ClassName_CLASSNAME_WIZARD    ClassName = 13
)

var ClassName_name = map[int32]string{
	0:  "CLASSNAME_UNKNOWN",
	1:  "CLASSNAME_COMMONER",
	2:  "CLASSNAME_BARBARIAN",
	3:  "CLASSNAME_BARD",
	4:  "CLASSNAME_CLERIC",
	5:  "CLASSNAME_DRUID",
	6:  "CLASSNAME_FIGHTER",
	7:  "CLASSNAME_MONK",
	8:  "CLASSNAME_PALADIN",
	9:  "CLASSNAME_RANGER",
	10: "CLASSNAME_ROGUE",
	11: "CLASSNAME_SORCEROR",
	12: "CLASSNAME_WARLOCK",
	13: "CLASSNAME_WIZARD",
}
var ClassName_value = map[string]int32{
	"CLASSNAME_UNKNOWN":   0,
	"CLASSNAME_COMMONER":  1,
	"CLASSNAME_BARBARIAN": 2,
	"CLASSNAME_BARD":      3,
	"CLASSNAME_CLERIC":    4,
	"CLASSNAME_DRUID":     5,
	"CLASSNAME_FIGHTER":   6,
	"CLASSNAME_MONK":      7,
	"CLASSNAME_PALADIN":   8,
	"CLASSNAME_RANGER":    9,
	"CLASSNAME_ROGUE":     10,
	"CLASSNAME_SORCEROR":  11,
	"CLASSNAME_WARLOCK":   12,
	"CLASSNAME_WIZARD":    13,
}

func (x ClassName) String() string {
	return proto.EnumName(ClassName_name, int32(x))
}
func (ClassName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{6}
}

type Level int32

const (
	Level_LEVEL_UNKNOWN   Level = 0
	Level_LEVEL_ONE       Level = 1
	Level_LEVEL_TWO       Level = 2
	Level_LEVEL_THREE     Level = 3
	Level_LEVEL_FOUR      Level = 4
	Level_LEVEL_FIVE      Level = 5
	Level_LEVEL_SIX       Level = 6
	Level_LEVEL_SEVEN     Level = 7
	Level_LEVEL_EIGHT     Level = 8
	Level_LEVEL_NINE      Level = 9
	Level_LEVEL_TEN       Level = 10
	Level_LEVEL_ELEVEN    Level = 11
	Level_LEVEL_TWELVE    Level = 12
	Level_LEVEL_THIRTEEN  Level = 13
	Level_LEVEL_FOURTEEN  Level = 14
	Level_LEVEL_FIFTEEN   Level = 15
	Level_LEVEL_SIXTEEN   Level = 16
	Level_LEVEL_SEVENTEEN Level = 17
	Level_LEVEL_EIGHTEEN  Level = 18
	Level_LEVEL_NINETEEN  Level = 19
	Level_LEVEL_TWENTY    Level = 20
)

var Level_name = map[int32]string{
	0:  "LEVEL_UNKNOWN",
	1:  "LEVEL_ONE",
	2:  "LEVEL_TWO",
	3:  "LEVEL_THREE",
	4:  "LEVEL_FOUR",
	5:  "LEVEL_FIVE",
	6:  "LEVEL_SIX",
	7:  "LEVEL_SEVEN",
	8:  "LEVEL_EIGHT",
	9:  "LEVEL_NINE",
	10: "LEVEL_TEN",
	11: "LEVEL_ELEVEN",
	12: "LEVEL_TWELVE",
	13: "LEVEL_THIRTEEN",
	14: "LEVEL_FOURTEEN",
	15: "LEVEL_FIFTEEN",
	16: "LEVEL_SIXTEEN",
	17: "LEVEL_SEVENTEEN",
	18: "LEVEL_EIGHTEEN",
	19: "LEVEL_NINETEEN",
	20: "LEVEL_TWENTY",
}
var Level_value = map[string]int32{
	"LEVEL_UNKNOWN":   0,
	"LEVEL_ONE":       1,
	"LEVEL_TWO":       2,
	"LEVEL_THREE":     3,
	"LEVEL_FOUR":      4,
	"LEVEL_FIVE":      5,
	"LEVEL_SIX":       6,
	"LEVEL_SEVEN":     7,
	"LEVEL_EIGHT":     8,
	"LEVEL_NINE":      9,
	"LEVEL_TEN":       10,
	"LEVEL_ELEVEN":    11,
	"LEVEL_TWELVE":    12,
	"LEVEL_THIRTEEN":  13,
	"LEVEL_FOURTEEN":  14,
	"LEVEL_FIFTEEN":   15,
	"LEVEL_SIXTEEN":   16,
	"LEVEL_SEVENTEEN": 17,
	"LEVEL_EIGHTEEN":  18,
	"LEVEL_NINETEEN":  19,
	"LEVEL_TWENTY":    20,
}

func (x Level) String() string {
	return proto.EnumName(Level_name, int32(x))
}
func (Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{7}
}

type DraconicAncestry int32

const (
	DraconicAncestry_DRAC_ANCS_UNKNOWN DraconicAncestry = 0
	DraconicAncestry_DRAC_ANCS_BLACK   DraconicAncestry = 1
	DraconicAncestry_DRAC_ANCS_BLUE    DraconicAncestry = 2
	DraconicAncestry_DRAC_ANCS_BRASS   DraconicAncestry = 3
	DraconicAncestry_DRAC_ANCS_BRONZE  DraconicAncestry = 4
	DraconicAncestry_DRAC_ANCS_COPPER  DraconicAncestry = 5
	DraconicAncestry_DRAC_ANCS_GOLD    DraconicAncestry = 6
	DraconicAncestry_DRAC_ANCS_GREEN   DraconicAncestry = 7
	DraconicAncestry_DRAC_ANCS_RED     DraconicAncestry = 8
	DraconicAncestry_DRAC_ANCS_SILVER  DraconicAncestry = 9
	DraconicAncestry_DRAC_ANCS_WHITE   DraconicAncestry = 10
)

var DraconicAncestry_name = map[int32]string{
	0:  "DRAC_ANCS_UNKNOWN",
	1:  "DRAC_ANCS_BLACK",
	2:  "DRAC_ANCS_BLUE",
	3:  "DRAC_ANCS_BRASS",
	4:  "DRAC_ANCS_BRONZE",
	5:  "DRAC_ANCS_COPPER",
	6:  "DRAC_ANCS_GOLD",
	7:  "DRAC_ANCS_GREEN",
	8:  "DRAC_ANCS_RED",
	9:  "DRAC_ANCS_SILVER",
	10: "DRAC_ANCS_WHITE",
}
var DraconicAncestry_value = map[string]int32{
	"DRAC_ANCS_UNKNOWN": 0,
	"DRAC_ANCS_BLACK":   1,
	"DRAC_ANCS_BLUE":    2,
	"DRAC_ANCS_BRASS":   3,
	"DRAC_ANCS_BRONZE":  4,
	"DRAC_ANCS_COPPER":  5,
	"DRAC_ANCS_GOLD":    6,
	"DRAC_ANCS_GREEN":   7,
	"DRAC_ANCS_RED":     8,
	"DRAC_ANCS_SILVER":  9,
	"DRAC_ANCS_WHITE":   10,
}

func (x DraconicAncestry) String() string {
	return proto.EnumName(DraconicAncestry_name, int32(x))
}
func (DraconicAncestry) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{8}
}

type SkillName int32

const (
	SkillName_SKILL_UNKNOWN         SkillName = 0
	SkillName_SKILL_ATHLETICS       SkillName = 1
	SkillName_SKILL_ACROBATICS      SkillName = 2
	SkillName_SKILL_SLEIGHT         SkillName = 3
	SkillName_SKILL_STEALTH         SkillName = 4
	SkillName_SKILL_ARCANA          SkillName = 5
	SkillName_SKILL_HISTORY         SkillName = 6
	SkillName_SKILL_INVESTIGATION   SkillName = 7
	SkillName_SKILL_NATURE          SkillName = 8
	SkillName_SKILL_RELIGION        SkillName = 9
	SkillName_SKILL_ANIMAL_HANDLING SkillName = 10
	SkillName_SKILL_INSIGHT         SkillName = 11
	SkillName_SKILL_MEDICINE        SkillName = 12
	SkillName_SKILL_PERCEPTION      SkillName = 13
	SkillName_SKILL_SURVIVAL        SkillName = 14
	SkillName_SKILL_DECEPTION       SkillName = 15
	SkillName_SKILL_INTIMIDATION    SkillName = 16
	SkillName_SKILL_PERFORMANCE     SkillName = 17
	SkillName_SKILL_PERSUASION      SkillName = 18
)

var SkillName_name = map[int32]string{
	0:  "SKILL_UNKNOWN",
	1:  "SKILL_ATHLETICS",
	2:  "SKILL_ACROBATICS",
	3:  "SKILL_SLEIGHT",
	4:  "SKILL_STEALTH",
	5:  "SKILL_ARCANA",
	6:  "SKILL_HISTORY",
	7:  "SKILL_INVESTIGATION",
	8:  "SKILL_NATURE",
	9:  "SKILL_RELIGION",
	10: "SKILL_ANIMAL_HANDLING",
	11: "SKILL_INSIGHT",
	12: "SKILL_MEDICINE",
	13: "SKILL_PERCEPTION",
	14: "SKILL_SURVIVAL",
	15: "SKILL_DECEPTION",
	16: "SKILL_INTIMIDATION",
	17: "SKILL_PERFORMANCE",
	18: "SKILL_PERSUASION",
}
var SkillName_value = map[string]int32{
	"SKILL_UNKNOWN":         0,
	"SKILL_ATHLETICS":       1,
	"SKILL_ACROBATICS":      2,
	"SKILL_SLEIGHT":         3,
	"SKILL_STEALTH":         4,
	"SKILL_ARCANA":          5,
	"SKILL_HISTORY":         6,
	"SKILL_INVESTIGATION":   7,
	"SKILL_NATURE":          8,
	"SKILL_RELIGION":        9,
	"SKILL_ANIMAL_HANDLING": 10,
	"SKILL_INSIGHT":         11,
	"SKILL_MEDICINE":        12,
	"SKILL_PERCEPTION":      13,
	"SKILL_SURVIVAL":        14,
	"SKILL_DECEPTION":       15,
	"SKILL_INTIMIDATION":    16,
	"SKILL_PERFORMANCE":     17,
	"SKILL_PERSUASION":      18,
}

func (x SkillName) String() string {
	return proto.EnumName(SkillName_name, int32(x))
}
func (SkillName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{9}
}

type Background int32

const (
	Background_BACK_UNKNOWN       Background = 0
	Background_BACK_ACOLYTE       Background = 1
	Background_BACK_CHARLATAN     Background = 2
	Background_BACK_CRIMINAL      Background = 3
	Background_BACK_ENTERTAINER   Background = 4
	Background_BACK_FOLK_HERO     Background = 5
	Background_BACK_GUILD_ARTISAN Background = 6
	Background_BACK_HERMIT        Background = 7
	Background_BACK_NOBLE         Background = 8
	Background_BACK_OUTLANDER     Background = 9
	Background_BACK_SAGE          Background = 10
	Background_BACK_SAILOR        Background = 11
	Background_BACK_SOLDIER       Background = 12
	Background_BACK_URCHIN        Background = 13
)

var Background_name = map[int32]string{
	0:  "BACK_UNKNOWN",
	1:  "BACK_ACOLYTE",
	2:  "BACK_CHARLATAN",
	3:  "BACK_CRIMINAL",
	4:  "BACK_ENTERTAINER",
	5:  "BACK_FOLK_HERO",
	6:  "BACK_GUILD_ARTISAN",
	7:  "BACK_HERMIT",
	8:  "BACK_NOBLE",
	9:  "BACK_OUTLANDER",
	10: "BACK_SAGE",
	11: "BACK_SAILOR",
	12: "BACK_SOLDIER",
	13: "BACK_URCHIN",
}
var Background_value = map[string]int32{
	"BACK_UNKNOWN":       0,
	"BACK_ACOLYTE":       1,
	"BACK_CHARLATAN":     2,
	"BACK_CRIMINAL":      3,
	"BACK_ENTERTAINER":   4,
	"BACK_FOLK_HERO":     5,
	"BACK_GUILD_ARTISAN": 6,
	"BACK_HERMIT":        7,
	"BACK_NOBLE":         8,
	"BACK_OUTLANDER":     9,
	"BACK_SAGE":          10,
	"BACK_SAILOR":        11,
	"BACK_SOLDIER":       12,
	"BACK_URCHIN":        13,
}

func (x Background) String() string {
	return proto.EnumName(Background_name, int32(x))
}
func (Background) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{10}
}

type PhysicalTraits_SkinTone int32

const (
	PhysicalTraits_SKIN_PALE         PhysicalTraits_SkinTone = 0
	PhysicalTraits_SKIN_OLIVE        PhysicalTraits_SkinTone = 1
	PhysicalTraits_SKIN_TAN          PhysicalTraits_SkinTone = 2
	PhysicalTraits_SKIN_DUSKY        PhysicalTraits_SkinTone = 3
	PhysicalTraits_SKIN_DARK         PhysicalTraits_SkinTone = 4
	PhysicalTraits_SKIN_UMBER        PhysicalTraits_SkinTone = 5
	PhysicalTraits_SKIN_GREEN        PhysicalTraits_SkinTone = 6
	PhysicalTraits_SKIN_GREY         PhysicalTraits_SkinTone = 7
	PhysicalTraits_SKIN_BLACK_SCALE  PhysicalTraits_SkinTone = 8
	PhysicalTraits_SKIN_BLUE_SCALE   PhysicalTraits_SkinTone = 9
	PhysicalTraits_SKIN_BRASS_SCALE  PhysicalTraits_SkinTone = 10
	PhysicalTraits_SKIN_BRONZE_SCALE PhysicalTraits_SkinTone = 11
	PhysicalTraits_SKIN_COPPER_SCALE PhysicalTraits_SkinTone = 12
	PhysicalTraits_SKIN_GOLD_SCALE   PhysicalTraits_SkinTone = 13
	PhysicalTraits_SKIN_GREEN_SCALE  PhysicalTraits_SkinTone = 14
	PhysicalTraits_SKIN_RED_SCALE    PhysicalTraits_SkinTone = 15
	PhysicalTraits_SKIN_SILVER_SCALE PhysicalTraits_SkinTone = 16
	PhysicalTraits_SKIN_WHITE_SCALE  PhysicalTraits_SkinTone = 17
)

var PhysicalTraits_SkinTone_name = map[int32]string{
	0:  "SKIN_PALE",
	1:  "SKIN_OLIVE",
	2:  "SKIN_TAN",
	3:  "SKIN_DUSKY",
	4:  "SKIN_DARK",
	5:  "SKIN_UMBER",
	6:  "SKIN_GREEN",
	7:  "SKIN_GREY",
	8:  "SKIN_BLACK_SCALE",
	9:  "SKIN_BLUE_SCALE",
	10: "SKIN_BRASS_SCALE",
	11: "SKIN_BRONZE_SCALE",
	12: "SKIN_COPPER_SCALE",
	13: "SKIN_GOLD_SCALE",
	14: "SKIN_GREEN_SCALE",
	15: "SKIN_RED_SCALE",
	16: "SKIN_SILVER_SCALE",
	17: "SKIN_WHITE_SCALE",
}
var PhysicalTraits_SkinTone_value = map[string]int32{
	"SKIN_PALE":         0,
	"SKIN_OLIVE":        1,
	"SKIN_TAN":          2,
	"SKIN_DUSKY":        3,
	"SKIN_DARK":         4,
	"SKIN_UMBER":        5,
	"SKIN_GREEN":        6,
	"SKIN_GREY":         7,
	"SKIN_BLACK_SCALE":  8,
	"SKIN_BLUE_SCALE":   9,
	"SKIN_BRASS_SCALE":  10,
	"SKIN_BRONZE_SCALE": 11,
	"SKIN_COPPER_SCALE": 12,
	"SKIN_GOLD_SCALE":   13,
	"SKIN_GREEN_SCALE":  14,
	"SKIN_RED_SCALE":    15,
	"SKIN_SILVER_SCALE": 16,
	"SKIN_WHITE_SCALE":  17,
}

func (x PhysicalTraits_SkinTone) String() string {
	return proto.EnumName(PhysicalTraits_SkinTone_name, int32(x))
}
func (PhysicalTraits_SkinTone) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{7, 0}
}

type GetNPCRequest struct {
	Gender               Gender       `protobuf:"varint,1,opt,name=gender,enum=facetome.Gender" json:"gender,omitempty"`
	Language             RealLanguage `protobuf:"varint,2,opt,name=language,enum=facetome.RealLanguage" json:"language,omitempty"`
	SurnameLanguage      RealLanguage `protobuf:"varint,3,opt,name=surname_language,json=surnameLanguage,enum=facetome.RealLanguage" json:"surname_language,omitempty"`
	RelativeAge          AgeGroup     `protobuf:"varint,4,opt,name=relative_age,json=relativeAge,enum=facetome.AgeGroup" json:"relative_age,omitempty"`
	Race                 RaceName     `protobuf:"varint,5,opt,name=race,enum=facetome.RaceName" json:"race,omitempty"`
	Alignment            Alignment    `protobuf:"varint,6,opt,name=alignment,enum=facetome.Alignment" json:"alignment,omitempty"`
	Class                ClassName    `protobuf:"varint,7,opt,name=class,enum=facetome.ClassName" json:"class,omitempty"`
	Level                Level        `protobuf:"varint,8,opt,name=level,enum=facetome.Level" json:"level,omitempty"`
	Background           Background   `protobuf:"varint,9,opt,name=background,enum=facetome.Background" json:"background,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetNPCRequest) Reset()         { *m = GetNPCRequest{} }
func (m *GetNPCRequest) String() string { return proto.CompactTextString(m) }
func (*GetNPCRequest) ProtoMessage()    {}
func (*GetNPCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{0}
}
func (m *GetNPCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNPCRequest.Unmarshal(m, b)
}
func (m *GetNPCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNPCRequest.Marshal(b, m, deterministic)
}
func (dst *GetNPCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNPCRequest.Merge(dst, src)
}
func (m *GetNPCRequest) XXX_Size() int {
	return xxx_messageInfo_GetNPCRequest.Size(m)
}
func (m *GetNPCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNPCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNPCRequest proto.InternalMessageInfo

func (m *GetNPCRequest) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_GEN_UNKNOWN
}

func (m *GetNPCRequest) GetLanguage() RealLanguage {
	if m != nil {
		return m.Language
	}
	return RealLanguage_LANG_UNKNOWN
}

func (m *GetNPCRequest) GetSurnameLanguage() RealLanguage {
	if m != nil {
		return m.SurnameLanguage
	}
	return RealLanguage_LANG_UNKNOWN
}

func (m *GetNPCRequest) GetRelativeAge() AgeGroup {
	if m != nil {
		return m.RelativeAge
	}
	return AgeGroup_AGE_UNKNOWN
}

func (m *GetNPCRequest) GetRace() RaceName {
	if m != nil {
		return m.Race
	}
	return RaceName_RACE_UNKNOWN
}

func (m *GetNPCRequest) GetAlignment() Alignment {
	if m != nil {
		return m.Alignment
	}
	return Alignment_ALIGN_UNKNOWN
}

func (m *GetNPCRequest) GetClass() ClassName {
	if m != nil {
		return m.Class
	}
	return ClassName_CLASSNAME_UNKNOWN
}

func (m *GetNPCRequest) GetLevel() Level {
	if m != nil {
		return m.Level
	}
	return Level_LEVEL_UNKNOWN
}

func (m *GetNPCRequest) GetBackground() Background {
	if m != nil {
		return m.Background
	}
	return Background_BACK_UNKNOWN
}

type GetNPCResponse struct {
	NpcData              *NPC     `protobuf:"bytes,1,opt,name=npc_data,json=npcData" json:"npc_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNPCResponse) Reset()         { *m = GetNPCResponse{} }
func (m *GetNPCResponse) String() string { return proto.CompactTextString(m) }
func (*GetNPCResponse) ProtoMessage()    {}
func (*GetNPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{1}
}
func (m *GetNPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNPCResponse.Unmarshal(m, b)
}
func (m *GetNPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNPCResponse.Marshal(b, m, deterministic)
}
func (dst *GetNPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNPCResponse.Merge(dst, src)
}
func (m *GetNPCResponse) XXX_Size() int {
	return xxx_messageInfo_GetNPCResponse.Size(m)
}
func (m *GetNPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNPCResponse proto.InternalMessageInfo

func (m *GetNPCResponse) GetNpcData() *NPC {
	if m != nil {
		return m.NpcData
	}
	return nil
}

type NPC struct {
	FirstName            string               `protobuf:"bytes,1,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName             string               `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Gender               Gender               `protobuf:"varint,3,opt,name=gender,enum=facetome.Gender" json:"gender,omitempty"`
	Age                  int32                `protobuf:"varint,4,opt,name=age" json:"age,omitempty"`
	Alignment            Alignment            `protobuf:"varint,5,opt,name=alignment,enum=facetome.Alignment" json:"alignment,omitempty"`
	Speed                int32                `protobuf:"varint,6,opt,name=speed" json:"speed,omitempty"`
	Language             []Language           `protobuf:"varint,7,rep,packed,name=language,enum=facetome.Language" json:"language,omitempty"`
	Class                []*Class             `protobuf:"bytes,8,rep,name=class" json:"class,omitempty"`
	Race                 *Race                `protobuf:"bytes,9,opt,name=race" json:"race,omitempty"`
	Stats                *Stats               `protobuf:"bytes,10,opt,name=stats" json:"stats,omitempty"`
	Skill                []*Skill             `protobuf:"bytes,11,rep,name=skill" json:"skill,omitempty"`
	PhysicalTraits       *PhysicalTraits      `protobuf:"bytes,12,opt,name=physical_traits,json=physicalTraits" json:"physical_traits,omitempty"`
	PsychologicalTraits  *PsychologicalTraits `protobuf:"bytes,13,opt,name=psychological_traits,json=psychologicalTraits" json:"psychological_traits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NPC) Reset()         { *m = NPC{} }
func (m *NPC) String() string { return proto.CompactTextString(m) }
func (*NPC) ProtoMessage()    {}
func (*NPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{2}
}
func (m *NPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NPC.Unmarshal(m, b)
}
func (m *NPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NPC.Marshal(b, m, deterministic)
}
func (dst *NPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NPC.Merge(dst, src)
}
func (m *NPC) XXX_Size() int {
	return xxx_messageInfo_NPC.Size(m)
}
func (m *NPC) XXX_DiscardUnknown() {
	xxx_messageInfo_NPC.DiscardUnknown(m)
}

var xxx_messageInfo_NPC proto.InternalMessageInfo

func (m *NPC) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *NPC) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *NPC) GetGender() Gender {
	if m != nil {
		return m.Gender
	}
	return Gender_GEN_UNKNOWN
}

func (m *NPC) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *NPC) GetAlignment() Alignment {
	if m != nil {
		return m.Alignment
	}
	return Alignment_ALIGN_UNKNOWN
}

func (m *NPC) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *NPC) GetLanguage() []Language {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *NPC) GetClass() []*Class {
	if m != nil {
		return m.Class
	}
	return nil
}

func (m *NPC) GetRace() *Race {
	if m != nil {
		return m.Race
	}
	return nil
}

func (m *NPC) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *NPC) GetSkill() []*Skill {
	if m != nil {
		return m.Skill
	}
	return nil
}

func (m *NPC) GetPhysicalTraits() *PhysicalTraits {
	if m != nil {
		return m.PhysicalTraits
	}
	return nil
}

func (m *NPC) GetPsychologicalTraits() *PsychologicalTraits {
	if m != nil {
		return m.PsychologicalTraits
	}
	return nil
}

type Stats struct {
	Str                  int32    `protobuf:"varint,1,opt,name=str" json:"str,omitempty"`
	Con                  int32    `protobuf:"varint,2,opt,name=con" json:"con,omitempty"`
	Dex                  int32    `protobuf:"varint,3,opt,name=dex" json:"dex,omitempty"`
	Int                  int32    `protobuf:"varint,4,opt,name=int" json:"int,omitempty"`
	Wis                  int32    `protobuf:"varint,5,opt,name=wis" json:"wis,omitempty"`
	Cha                  int32    `protobuf:"varint,6,opt,name=cha" json:"cha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{3}
}
func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (dst *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(dst, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetStr() int32 {
	if m != nil {
		return m.Str
	}
	return 0
}

func (m *Stats) GetCon() int32 {
	if m != nil {
		return m.Con
	}
	return 0
}

func (m *Stats) GetDex() int32 {
	if m != nil {
		return m.Dex
	}
	return 0
}

func (m *Stats) GetInt() int32 {
	if m != nil {
		return m.Int
	}
	return 0
}

func (m *Stats) GetWis() int32 {
	if m != nil {
		return m.Wis
	}
	return 0
}

func (m *Stats) GetCha() int32 {
	if m != nil {
		return m.Cha
	}
	return 0
}

type Skill struct {
	SkillName            SkillName `protobuf:"varint,1,opt,name=skill_name,json=skillName,enum=facetome.SkillName" json:"skill_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Skill) Reset()         { *m = Skill{} }
func (m *Skill) String() string { return proto.CompactTextString(m) }
func (*Skill) ProtoMessage()    {}
func (*Skill) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{4}
}
func (m *Skill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Skill.Unmarshal(m, b)
}
func (m *Skill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Skill.Marshal(b, m, deterministic)
}
func (dst *Skill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Skill.Merge(dst, src)
}
func (m *Skill) XXX_Size() int {
	return xxx_messageInfo_Skill.Size(m)
}
func (m *Skill) XXX_DiscardUnknown() {
	xxx_messageInfo_Skill.DiscardUnknown(m)
}

var xxx_messageInfo_Skill proto.InternalMessageInfo

func (m *Skill) GetSkillName() SkillName {
	if m != nil {
		return m.SkillName
	}
	return SkillName_SKILL_UNKNOWN
}

type Class struct {
	Name                 ClassName `protobuf:"varint,1,opt,name=name,enum=facetome.ClassName" json:"name,omitempty"`
	Level                Level     `protobuf:"varint,2,opt,name=level,enum=facetome.Level" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Class) Reset()         { *m = Class{} }
func (m *Class) String() string { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()    {}
func (*Class) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{5}
}
func (m *Class) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Class.Unmarshal(m, b)
}
func (m *Class) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Class.Marshal(b, m, deterministic)
}
func (dst *Class) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Class.Merge(dst, src)
}
func (m *Class) XXX_Size() int {
	return xxx_messageInfo_Class.Size(m)
}
func (m *Class) XXX_DiscardUnknown() {
	xxx_messageInfo_Class.DiscardUnknown(m)
}

var xxx_messageInfo_Class proto.InternalMessageInfo

func (m *Class) GetName() ClassName {
	if m != nil {
		return m.Name
	}
	return ClassName_CLASSNAME_UNKNOWN
}

func (m *Class) GetLevel() Level {
	if m != nil {
		return m.Level
	}
	return Level_LEVEL_UNKNOWN
}

type Race struct {
	Race                 RaceName        `protobuf:"varint,1,opt,name=race,enum=facetome.RaceName" json:"race,omitempty"`
	RacialTraits         map[string]bool `protobuf:"bytes,2,rep,name=racial_traits,json=racialTraits" json:"racial_traits,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Race) Reset()         { *m = Race{} }
func (m *Race) String() string { return proto.CompactTextString(m) }
func (*Race) ProtoMessage()    {}
func (*Race) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{6}
}
func (m *Race) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Race.Unmarshal(m, b)
}
func (m *Race) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Race.Marshal(b, m, deterministic)
}
func (dst *Race) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Race.Merge(dst, src)
}
func (m *Race) XXX_Size() int {
	return xxx_messageInfo_Race.Size(m)
}
func (m *Race) XXX_DiscardUnknown() {
	xxx_messageInfo_Race.DiscardUnknown(m)
}

var xxx_messageInfo_Race proto.InternalMessageInfo

func (m *Race) GetRace() RaceName {
	if m != nil {
		return m.Race
	}
	return RaceName_RACE_UNKNOWN
}

func (m *Race) GetRacialTraits() map[string]bool {
	if m != nil {
		return m.RacialTraits
	}
	return nil
}

type PhysicalTraits struct {
	HeightFeet           int32                   `protobuf:"varint,1,opt,name=height_feet,json=heightFeet" json:"height_feet,omitempty"`
	HeightInch           int32                   `protobuf:"varint,2,opt,name=height_inch,json=heightInch" json:"height_inch,omitempty"`
	Weight               int32                   `protobuf:"varint,3,opt,name=weight" json:"weight,omitempty"`
	SkinTone             PhysicalTraits_SkinTone `protobuf:"varint,4,opt,name=skin_tone,json=skinTone,enum=facetome.PhysicalTraits_SkinTone" json:"skin_tone,omitempty"`
	Traits               []string                `protobuf:"bytes,5,rep,name=traits" json:"traits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PhysicalTraits) Reset()         { *m = PhysicalTraits{} }
func (m *PhysicalTraits) String() string { return proto.CompactTextString(m) }
func (*PhysicalTraits) ProtoMessage()    {}
func (*PhysicalTraits) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{7}
}
func (m *PhysicalTraits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhysicalTraits.Unmarshal(m, b)
}
func (m *PhysicalTraits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhysicalTraits.Marshal(b, m, deterministic)
}
func (dst *PhysicalTraits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhysicalTraits.Merge(dst, src)
}
func (m *PhysicalTraits) XXX_Size() int {
	return xxx_messageInfo_PhysicalTraits.Size(m)
}
func (m *PhysicalTraits) XXX_DiscardUnknown() {
	xxx_messageInfo_PhysicalTraits.DiscardUnknown(m)
}

var xxx_messageInfo_PhysicalTraits proto.InternalMessageInfo

func (m *PhysicalTraits) GetHeightFeet() int32 {
	if m != nil {
		return m.HeightFeet
	}
	return 0
}

func (m *PhysicalTraits) GetHeightInch() int32 {
	if m != nil {
		return m.HeightInch
	}
	return 0
}

func (m *PhysicalTraits) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *PhysicalTraits) GetSkinTone() PhysicalTraits_SkinTone {
	if m != nil {
		return m.SkinTone
	}
	return PhysicalTraits_SKIN_PALE
}

func (m *PhysicalTraits) GetTraits() []string {
	if m != nil {
		return m.Traits
	}
	return nil
}

type PsychologicalTraits struct {
	Traits               []string `protobuf:"bytes,1,rep,name=traits" json:"traits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PsychologicalTraits) Reset()         { *m = PsychologicalTraits{} }
func (m *PsychologicalTraits) String() string { return proto.CompactTextString(m) }
func (*PsychologicalTraits) ProtoMessage()    {}
func (*PsychologicalTraits) Descriptor() ([]byte, []int) {
	return fileDescriptor_face_tome_0c21c89a4ea0f2c4, []int{8}
}
func (m *PsychologicalTraits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PsychologicalTraits.Unmarshal(m, b)
}
func (m *PsychologicalTraits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PsychologicalTraits.Marshal(b, m, deterministic)
}
func (dst *PsychologicalTraits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PsychologicalTraits.Merge(dst, src)
}
func (m *PsychologicalTraits) XXX_Size() int {
	return xxx_messageInfo_PsychologicalTraits.Size(m)
}
func (m *PsychologicalTraits) XXX_DiscardUnknown() {
	xxx_messageInfo_PsychologicalTraits.DiscardUnknown(m)
}

var xxx_messageInfo_PsychologicalTraits proto.InternalMessageInfo

func (m *PsychologicalTraits) GetTraits() []string {
	if m != nil {
		return m.Traits
	}
	return nil
}

func init() {
	proto.RegisterType((*GetNPCRequest)(nil), "facetome.GetNPCRequest")
	proto.RegisterType((*GetNPCResponse)(nil), "facetome.GetNPCResponse")
	proto.RegisterType((*NPC)(nil), "facetome.NPC")
	proto.RegisterType((*Stats)(nil), "facetome.Stats")
	proto.RegisterType((*Skill)(nil), "facetome.Skill")
	proto.RegisterType((*Class)(nil), "facetome.Class")
	proto.RegisterType((*Race)(nil), "facetome.Race")
	proto.RegisterMapType((map[string]bool)(nil), "facetome.Race.RacialTraitsEntry")
	proto.RegisterType((*PhysicalTraits)(nil), "facetome.PhysicalTraits")
	proto.RegisterType((*PsychologicalTraits)(nil), "facetome.PsychologicalTraits")
	proto.RegisterEnum("facetome.AgeGroup", AgeGroup_name, AgeGroup_value)
	proto.RegisterEnum("facetome.Gender", Gender_name, Gender_value)
	proto.RegisterEnum("facetome.RealLanguage", RealLanguage_name, RealLanguage_value)
	proto.RegisterEnum("facetome.RaceName", RaceName_name, RaceName_value)
	proto.RegisterEnum("facetome.Alignment", Alignment_name, Alignment_value)
	proto.RegisterEnum("facetome.Language", Language_name, Language_value)
	proto.RegisterEnum("facetome.ClassName", ClassName_name, ClassName_value)
	proto.RegisterEnum("facetome.Level", Level_name, Level_value)
	proto.RegisterEnum("facetome.DraconicAncestry", DraconicAncestry_name, DraconicAncestry_value)
	proto.RegisterEnum("facetome.SkillName", SkillName_name, SkillName_value)
	proto.RegisterEnum("facetome.Background", Background_name, Background_value)
	proto.RegisterEnum("facetome.PhysicalTraits_SkinTone", PhysicalTraits_SkinTone_name, PhysicalTraits_SkinTone_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FaceTomeClient is the client API for FaceTome service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FaceTomeClient interface {
	GetNPC(ctx context.Context, in *GetNPCRequest, opts ...grpc.CallOption) (*GetNPCResponse, error)
}

type faceTomeClient struct {
	cc *grpc.ClientConn
}

func NewFaceTomeClient(cc *grpc.ClientConn) FaceTomeClient {
	return &faceTomeClient{cc}
}

func (c *faceTomeClient) GetNPC(ctx context.Context, in *GetNPCRequest, opts ...grpc.CallOption) (*GetNPCResponse, error) {
	out := new(GetNPCResponse)
	err := c.cc.Invoke(ctx, "/facetome.FaceTome/GetNPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FaceTomeServer is the server API for FaceTome service.
type FaceTomeServer interface {
	GetNPC(context.Context, *GetNPCRequest) (*GetNPCResponse, error)
}

func RegisterFaceTomeServer(s *grpc.Server, srv FaceTomeServer) {
	s.RegisterService(&_FaceTome_serviceDesc, srv)
}

func _FaceTome_GetNPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FaceTomeServer).GetNPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/facetome.FaceTome/GetNPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FaceTomeServer).GetNPC(ctx, req.(*GetNPCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FaceTome_serviceDesc = grpc.ServiceDesc{
	ServiceName: "facetome.FaceTome",
	HandlerType: (*FaceTomeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNPC",
			Handler:    _FaceTome_GetNPC_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/face-tome.proto",
}

func init() { proto.RegisterFile("api/face-tome.proto", fileDescriptor_face_tome_0c21c89a4ea0f2c4) }

var fileDescriptor_face_tome_0c21c89a4ea0f2c4 = []byte{
	// 2384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x58, 0xdd, 0x8e, 0x23, 0x39,
	0xf5, 0xdf, 0x7c, 0x54, 0x77, 0xe2, 0x7c, 0xb9, 0xab, 0x7b, 0x66, 0xb2, 0xf3, 0xd7, 0xea, 0x3f,
	0x44, 0x5a, 0x18, 0x5a, 0xda, 0x59, 0x31, 0x80, 0x84, 0x16, 0x01, 0x72, 0xaa, 0x9c, 0x8a, 0x69,
	0xc7, 0x0e, 0xae, 0x4a, 0x7a, 0x7b, 0x6e, 0xa2, 0xda, 0x4c, 0x6d, 0x77, 0xb4, 0x99, 0x24, 0x24,
	0xe9, 0x59, 0xe6, 0x0d, 0xb8, 0xe5, 0x06, 0x09, 0x89, 0x4b, 0x78, 0x05, 0x1e, 0x00, 0x71, 0xc5,
	0x53, 0xf0, 0x10, 0x5c, 0xed, 0x15, 0x3a, 0x76, 0x95, 0xab, 0x6a, 0x66, 0xd8, 0xe5, 0xa6, 0x55,
	0xe7, 0xe7, 0x9f, 0x8f, 0x8f, 0xcf, 0x97, 0x4f, 0x07, 0x9d, 0xc7, 0xbb, 0xd5, 0xa7, 0x5f, 0xc6,
	0xcb, 0xe4, 0x93, 0xe3, 0xf6, 0x55, 0xf2, 0x6c, 0xb7, 0xdf, 0x1e, 0xb7, 0x6e, 0x03, 0x00, 0x90,
	0x07, 0xff, 0xac, 0xa1, 0x4e, 0x90, 0x1c, 0xc5, 0xd4, 0x53, 0xc9, 0x6f, 0xef, 0x93, 0xc3, 0xd1,
	0x7d, 0x8a, 0x4e, 0x6e, 0x93, 0xcd, 0xcb, 0x64, 0xdf, 0xaf, 0x3c, 0xa9, 0x3c, 0xed, 0x3e, 0xc7,
	0xcf, 0x32, 0xf2, 0xb3, 0x40, 0xe3, 0x2a, 0x5d, 0x77, 0x9f, 0xa3, 0xc6, 0x3a, 0xde, 0xdc, 0xde,
	0xc7, 0xb7, 0x49, 0xbf, 0xaa, 0xb9, 0x0f, 0x73, 0xae, 0x4a, 0xe2, 0x35, 0x4f, 0x57, 0x95, 0xe5,
	0xb9, 0x04, 0xe1, 0xc3, 0xfd, 0x7e, 0x13, 0xbf, 0x4a, 0x16, 0x76, 0x6f, 0xed, 0x5b, 0xf7, 0xf6,
	0x52, 0x7e, 0x06, 0xb8, 0x3f, 0x45, 0xed, 0x7d, 0xb2, 0x8e, 0x8f, 0xab, 0xd7, 0xc9, 0x02, 0xb6,
	0xd7, 0xf5, 0x76, 0x37, 0xdf, 0x4e, 0x6e, 0x93, 0x60, 0xbf, 0xbd, 0xdf, 0xa9, 0x56, 0xc6, 0x23,
	0xb7, 0x89, 0xfb, 0x7d, 0x54, 0xdf, 0xc7, 0xcb, 0xa4, 0xef, 0xbc, 0x4d, 0x57, 0xf1, 0x32, 0x11,
	0xf1, 0xab, 0x44, 0xe9, 0x75, 0xf7, 0x47, 0xa8, 0x19, 0xaf, 0x57, 0xb7, 0x9b, 0x57, 0xc9, 0xe6,
	0xd8, 0x3f, 0xd1, 0xe4, 0xf3, 0x82, 0xee, 0x6c, 0x49, 0xe5, 0x2c, 0xf7, 0x87, 0xc8, 0x59, 0xae,
	0xe3, 0xc3, 0xa1, 0x7f, 0xfa, 0x36, 0xdd, 0x03, 0x58, 0x2b, 0x37, 0x0c, 0xf7, 0x63, 0xe4, 0xac,
	0x93, 0xd7, 0xc9, 0xba, 0xdf, 0xd0, 0xd4, 0x5e, 0x4e, 0xe5, 0x00, 0x2b, 0xb3, 0xea, 0xfe, 0x04,
	0xa1, 0x2f, 0xe2, 0xe5, 0x57, 0xb7, 0xfb, 0xed, 0xfd, 0xe6, 0x65, 0xbf, 0xa9, 0xb9, 0x17, 0x39,
	0x77, 0x68, 0xd7, 0x54, 0x81, 0x37, 0xf8, 0x0c, 0x75, 0xb3, 0x58, 0x1e, 0x76, 0xdb, 0xcd, 0x21,
	0x71, 0x9f, 0xa2, 0xc6, 0x66, 0xb7, 0x5c, 0xbc, 0x8c, 0x8f, 0xb1, 0x0e, 0x67, 0xeb, 0x79, 0x27,
	0xd7, 0x02, 0xc4, 0xd3, 0xcd, 0x6e, 0xe9, 0xc7, 0xc7, 0x78, 0xf0, 0x97, 0x3a, 0xaa, 0x89, 0xa9,
	0xe7, 0x7e, 0x84, 0xd0, 0x97, 0xab, 0xfd, 0xe1, 0xb8, 0x00, 0x9f, 0xeb, 0x3d, 0x4d, 0xd5, 0xd4,
	0x08, 0x5c, 0xc3, 0xfd, 0x3f, 0xd4, 0x5c, 0xc7, 0xd9, 0x6a, 0x55, 0xaf, 0x36, 0x00, 0xd0, 0x8b,
	0x79, 0xea, 0xd4, 0xbe, 0x23, 0x75, 0x30, 0xaa, 0x65, 0xa1, 0x73, 0x14, 0x7c, 0x96, 0xdd, 0xee,
	0xfc, 0x4f, 0x6e, 0xbf, 0x40, 0xce, 0x61, 0x97, 0x24, 0x2f, 0x75, 0x94, 0x1c, 0x65, 0x04, 0xf7,
	0x59, 0x21, 0x2b, 0x4f, 0x9f, 0xd4, 0xca, 0xb1, 0x7e, 0x4f, 0x46, 0x7e, 0x9c, 0x05, 0xaf, 0xf1,
	0xa4, 0xf6, 0xb4, 0x55, 0x8c, 0x88, 0x0e, 0x5e, 0x16, 0xb8, 0x41, 0x9a, 0x3e, 0x4d, 0xed, 0xc5,
	0x6e, 0x39, 0x7d, 0xd2, 0xd4, 0xf9, 0x18, 0x39, 0x87, 0x63, 0x7c, 0x3c, 0xf4, 0x91, 0x26, 0x15,
	0x54, 0x85, 0x00, 0x2b, 0xb3, 0xaa, 0x69, 0x5f, 0xad, 0xd6, 0xeb, 0x7e, 0xeb, 0xed, 0x13, 0x43,
	0x80, 0x95, 0x59, 0x75, 0x09, 0xea, 0xed, 0xee, 0xde, 0x1c, 0x56, 0xcb, 0x78, 0xbd, 0x38, 0xee,
	0xe3, 0xd5, 0xf1, 0xd0, 0x6f, 0x6b, 0xbd, 0xfd, 0x7c, 0xc3, 0x34, 0x25, 0x44, 0x7a, 0x5d, 0x75,
	0x77, 0x25, 0xd9, 0x9d, 0xa2, 0x8b, 0xdd, 0xe1, 0xcd, 0xf2, 0x6e, 0xbb, 0xde, 0xde, 0x16, 0xf5,
	0x74, 0xb4, 0x9e, 0x8f, 0x0a, 0x7a, 0x8a, 0xac, 0x54, 0xd9, 0xf9, 0xee, 0x5d, 0x70, 0x70, 0x40,
	0x8e, 0xbe, 0x0b, 0x44, 0xf0, 0x70, 0x34, 0x3d, 0xc2, 0x51, 0xf0, 0x09, 0xc8, 0x72, 0xbb, 0xd1,
	0x49, 0xe1, 0x28, 0xf8, 0x04, 0xe4, 0x65, 0xf2, 0x3b, 0x9d, 0x0c, 0x8e, 0x82, 0x4f, 0x40, 0x56,
	0x9b, 0x63, 0x16, 0xf7, 0xd5, 0xe6, 0x08, 0xc8, 0xd7, 0xab, 0x83, 0x8e, 0xb8, 0xa3, 0xe0, 0x53,
	0xeb, 0xb9, 0x8b, 0xd3, 0xa0, 0xc2, 0xe7, 0xe0, 0xe7, 0xc8, 0xd1, 0x9e, 0x71, 0x9f, 0x23, 0xa4,
	0x7d, 0x93, 0x27, 0x67, 0x29, 0x4b, 0x34, 0x49, 0x57, 0x5b, 0xf3, 0x90, 0x7d, 0x0e, 0xae, 0x91,
	0xa3, 0x03, 0xe9, 0xfe, 0x00, 0xd5, 0xdf, 0xbf, 0x2d, 0x2f, 0x52, 0x4d, 0xc8, 0x6b, 0xb4, 0xfa,
	0x6d, 0x35, 0x3a, 0xf8, 0x5b, 0x05, 0xd5, 0x21, 0xf8, 0xb6, 0xb3, 0x54, 0xbe, 0xa3, 0xb3, 0x50,
	0xd4, 0xd9, 0xc7, 0xcb, 0x55, 0x1e, 0x86, 0xaa, 0x8e, 0xff, 0x93, 0xf2, 0x06, 0xf8, 0xb3, 0xca,
	0xfc, 0x4d, 0x37, 0xc7, 0xfd, 0x1b, 0xd5, 0xde, 0x17, 0xa0, 0xc7, 0xbf, 0x42, 0x67, 0xef, 0x50,
	0xc0, 0x69, 0x5f, 0x25, 0x6f, 0xd2, 0x7a, 0x85, 0x4f, 0xa8, 0x8e, 0xd7, 0xf1, 0xfa, 0xde, 0x54,
	0x69, 0x43, 0x19, 0xe1, 0xb3, 0xea, 0xcf, 0x2a, 0x83, 0xbf, 0xd6, 0x51, 0xb7, 0x9c, 0x38, 0xee,
	0xff, 0xa3, 0xd6, 0x5d, 0xb2, 0xba, 0xbd, 0x3b, 0x2e, 0xbe, 0x4c, 0x92, 0x63, 0x1a, 0x55, 0x64,
	0xa0, 0x51, 0x92, 0x1c, 0x0b, 0x84, 0xd5, 0x66, 0x79, 0x97, 0x06, 0x39, 0x25, 0xb0, 0xcd, 0xf2,
	0xce, 0x7d, 0x88, 0x4e, 0xbe, 0xd6, 0x52, 0x1a, 0xee, 0x54, 0x72, 0x7f, 0x89, 0x20, 0x16, 0x9b,
	0xc5, 0x71, 0xbb, 0xc9, 0x5a, 0xf5, 0xf7, 0xfe, 0x5b, 0xfe, 0x42, 0x00, 0x37, 0xd1, 0x76, 0x93,
	0xa8, 0xc6, 0x21, 0xfd, 0x02, 0xbd, 0xa9, 0xb7, 0x9c, 0x27, 0xb5, 0xa7, 0x4d, 0x95, 0x4a, 0x83,
	0x7f, 0x55, 0x51, 0x23, 0xa3, 0xbb, 0x1d, 0xd4, 0x0c, 0xaf, 0x98, 0x58, 0x4c, 0x09, 0xa7, 0xf8,
	0x03, 0xb7, 0x8b, 0x90, 0x16, 0x25, 0x67, 0x73, 0x8a, 0x2b, 0x6e, 0x1b, 0x35, 0xb4, 0x1c, 0x11,
	0x81, 0xab, 0x76, 0xd5, 0x9f, 0x85, 0x57, 0x37, 0xb8, 0x66, 0x37, 0xfb, 0x44, 0x5d, 0xe1, 0xba,
	0x5d, 0x9e, 0x4d, 0x86, 0x54, 0x61, 0xc7, 0xca, 0x81, 0xa2, 0x54, 0xe0, 0x13, 0x4b, 0x0f, 0x14,
	0xbd, 0xc1, 0xa7, 0xee, 0x05, 0xc2, 0x5a, 0x1c, 0x72, 0xe2, 0x5d, 0x2d, 0x42, 0x0f, 0x2c, 0x68,
	0xb8, 0xe7, 0xa8, 0x97, 0xa2, 0x33, 0x9a, 0x82, 0xcd, 0x9c, 0xaa, 0x48, 0x18, 0xa6, 0x28, 0x72,
	0x1f, 0xa0, 0xb3, 0x14, 0x95, 0xe2, 0x45, 0x46, 0x6e, 0x59, 0xd8, 0x93, 0xd3, 0x29, 0x55, 0x29,
	0xdc, 0xb6, 0x8a, 0x03, 0xc9, 0xfd, 0x14, 0xec, 0x58, 0xc5, 0xda, 0xc4, 0x14, 0xed, 0xba, 0x2e,
	0xea, 0x6a, 0x54, 0xd1, 0x8c, 0xd9, 0xb3, 0x5a, 0x43, 0xc6, 0xe7, 0x56, 0x2b, 0xb6, 0x0a, 0xae,
	0xc7, 0x2c, 0xca, 0x4c, 0x38, 0x1b, 0x7c, 0x82, 0xce, 0xdf, 0xd3, 0x17, 0x0a, 0x11, 0xa9, 0x14,
	0x23, 0x72, 0xf9, 0xef, 0x0a, 0x6a, 0x64, 0x4f, 0xaf, 0xdb, 0x43, 0x2d, 0x12, 0xd0, 0xc5, 0x4c,
	0x5c, 0x09, 0x79, 0x2d, 0x4c, 0x4c, 0x00, 0x60, 0x62, 0x44, 0x44, 0x84, 0x2b, 0x19, 0x21, 0x92,
	0xbe, 0xcf, 0xa9, 0xc2, 0x55, 0xf0, 0x2b, 0x00, 0xde, 0x98, 0x71, 0x1f, 0xd7, 0xc0, 0x7a, 0x10,
	0x89, 0x2f, 0x39, 0x0d, 0x3d, 0xd8, 0x53, 0x77, 0x31, 0x6a, 0xeb, 0x3d, 0x94, 0x0a, 0x12, 0xe8,
	0xe0, 0x9c, 0xa3, 0x1e, 0x20, 0x37, 0x72, 0x26, 0x82, 0x05, 0xf1, 0x67, 0x3c, 0x32, 0x11, 0x32,
	0x5b, 0x41, 0x3c, 0xcd, 0x34, 0x4d, 0x18, 0x9c, 0xb4, 0x20, 0x01, 0xc4, 0x27, 0x3d, 0x1d, 0x9c,
	0x08, 0x40, 0x13, 0x1c, 0xa3, 0x4f, 0xa7, 0x22, 0x62, 0x01, 0x15, 0x44, 0x31, 0x22, 0x30, 0xca,
	0x78, 0x44, 0x78, 0x8c, 0x8a, 0x08, 0xb7, 0xac, 0x09, 0x6c, 0x42, 0x39, 0x0d, 0x43, 0xdc, 0xbe,
	0xfc, 0x7d, 0x05, 0x9d, 0x98, 0xd7, 0x0d, 0xd8, 0x01, 0x15, 0x85, 0x4b, 0x9f, 0xa3, 0x1e, 0x00,
	0xc4, 0x17, 0x4a, 0x06, 0x37, 0x42, 0xce, 0x42, 0x5c, 0x01, 0x4f, 0x00, 0x38, 0xa2, 0x13, 0x70,
	0x73, 0x15, 0xb2, 0x13, 0x64, 0x2d, 0xd5, 0xb2, 0x2d, 0x91, 0x22, 0x22, 0x4c, 0x29, 0x75, 0xf7,
	0x0c, 0x75, 0x2c, 0xa8, 0x21, 0x07, 0x6e, 0x65, 0xce, 0x0a, 0xa8, 0xf0, 0xa9, 0xa2, 0x3e, 0x3e,
	0xb9, 0xfc, 0x63, 0x0d, 0xb5, 0x8b, 0xb3, 0x13, 0x58, 0xcb, 0x89, 0x08, 0x0a, 0x16, 0xb5, 0xd0,
	0xa9, 0x46, 0xc8, 0x08, 0x57, 0x72, 0x01, 0xfc, 0x9f, 0x09, 0x5e, 0x88, 0x6b, 0x56, 0xf0, 0xe1,
	0xf4, 0x4c, 0xa0, 0x1c, 0x3b, 0xb9, 0x00, 0xb5, 0x60, 0x85, 0x10, 0x9f, 0x5a, 0x61, 0xc4, 0x70,
	0x23, 0x17, 0x14, 0x6e, 0x5a, 0x21, 0x20, 0x18, 0x59, 0x61, 0x0c, 0x59, 0x6e, 0x05, 0x86, 0xdb,
	0x56, 0x60, 0x11, 0xee, 0x58, 0xe1, 0xd7, 0x04, 0x77, 0xad, 0x70, 0x25, 0x71, 0xcf, 0x0a, 0x9c,
	0x60, 0x6c, 0x85, 0x29, 0xc7, 0x67, 0x56, 0x50, 0x33, 0xec, 0x5a, 0x21, 0x24, 0xf8, 0x3c, 0x17,
	0xe6, 0xf8, 0xc2, 0x0a, 0x73, 0x86, 0x1f, 0x58, 0xe1, 0xc5, 0x18, 0x3f, 0x04, 0xe7, 0x9b, 0x43,
	0x95, 0x5a, 0xfc, 0x66, 0x46, 0xc5, 0x0d, 0xc1, 0x8f, 0x4a, 0x60, 0xc8, 0x84, 0x4f, 0x14, 0xee,
	0x43, 0xbe, 0x58, 0xd0, 0xbf, 0x26, 0x6a, 0xce, 0xc2, 0x31, 0xfe, 0xb0, 0x04, 0x8f, 0x09, 0x1f,
	0x71, 0x26, 0x02, 0xfc, 0xf8, 0xf2, 0xef, 0x55, 0xd4, 0xc8, 0x1e, 0x03, 0x08, 0x8a, 0x22, 0x1e,
	0x2d, 0xa7, 0x89, 0x46, 0x40, 0xd1, 0x68, 0x31, 0x66, 0x9c, 0xe3, 0x8a, 0xfb, 0x08, 0x9d, 0x17,
	0xc0, 0x89, 0x9c, 0x89, 0x88, 0x30, 0xe8, 0x5f, 0x67, 0xa8, 0xa3, 0x17, 0x28, 0x07, 0x6e, 0x30,
	0xc6, 0xb5, 0x12, 0x74, 0x2d, 0xa5, 0x6f, 0x52, 0xc6, 0x42, 0xbe, 0x92, 0xd7, 0xd8, 0x71, 0x1f,
	0xa3, 0x87, 0x1a, 0x02, 0xc3, 0x18, 0x38, 0x90, 0x05, 0xe3, 0x68, 0x24, 0x25, 0xd4, 0x4c, 0x76,
	0x5a, 0x66, 0xf4, 0x22, 0x8c, 0xe4, 0x0c, 0xaa, 0xa7, 0x8b, 0x90, 0x59, 0x98, 0x4d, 0x88, 0x30,
	0x9d, 0xcd, 0x98, 0xa5, 0x48, 0x20, 0xc5, 0x50, 0x2a, 0x61, 0xaa, 0x47, 0x83, 0x81, 0x90, 0x13,
	0xba, 0x18, 0x49, 0x45, 0xc3, 0x08, 0x23, 0xcb, 0x35, 0xb0, 0x92, 0xde, 0x15, 0x6e, 0x59, 0xc3,
	0xe0, 0x24, 0xb0, 0x0e, 0xb7, 0xcb, 0x90, 0x54, 0x1e, 0xee, 0x58, 0x28, 0x62, 0xd4, 0x38, 0xb1,
	0x7b, 0xf9, 0xe7, 0x0a, 0x6a, 0xda, 0x39, 0x10, 0x08, 0x84, 0xb3, 0xa0, 0x58, 0x6d, 0x6d, 0xd4,
	0x30, 0x10, 0x0f, 0x4c, 0xd3, 0x4f, 0x25, 0x61, 0x8a, 0x2c, 0x95, 0xa0, 0xc8, 0xac, 0x24, 0x02,
	0x5c, 0x2f, 0x48, 0x02, 0x3b, 0x05, 0x89, 0xe2, 0x93, 0x5c, 0xf2, 0x02, 0x7c, 0x5a, 0x90, 0xc0,
	0x15, 0xb9, 0x44, 0x71, 0xf3, 0xf2, 0x1f, 0x55, 0xd4, 0xb0, 0x85, 0x97, 0xe5, 0x81, 0x37, 0x96,
	0x32, 0x84, 0xa6, 0x03, 0xa1, 0xfb, 0x00, 0x1a, 0x84, 0x81, 0xe5, 0x64, 0x22, 0x05, 0xae, 0xc0,
	0x2d, 0x4c, 0x9d, 0x65, 0x29, 0x54, 0xb5, 0x1c, 0xca, 0x35, 0x50, 0x83, 0x08, 0x98, 0xea, 0x61,
	0xb6, 0x0b, 0x1a, 0x59, 0xc8, 0x09, 0x30, 0x1c, 0xbb, 0x25, 0x90, 0x43, 0xce, 0xa0, 0x2e, 0x33,
	0xb5, 0x36, 0x05, 0x4f, 0x2d, 0x47, 0x2a, 0x0f, 0x36, 0x35, 0xac, 0x1a, 0x32, 0xbc, 0x09, 0x43,
	0xc2, 0x71, 0x13, 0x5a, 0x8a, 0xb1, 0x0e, 0x5a, 0x5b, 0xc4, 0x08, 0xc7, 0x28, 0x37, 0x50, 0x11,
	0x4f, 0x0a, 0xe6, 0xe1, 0x16, 0xb4, 0xd7, 0xb4, 0x37, 0xd0, 0xa9, 0x09, 0x9e, 0xa9, 0x5a, 0x31,
	0xa2, 0x4a, 0x10, 0x8e, 0x3b, 0xb6, 0x62, 0xa6, 0x8a, 0x4d, 0xa4, 0xf2, 0x41, 0x53, 0xd7, 0x1a,
	0x10, 0xde, 0xf0, 0x39, 0x11, 0xb8, 0x07, 0x8f, 0x4e, 0xda, 0x9c, 0x7c, 0xaa, 0x52, 0x8f, 0x60,
	0x70, 0x63, 0xd3, 0x0e, 0x64, 0xe0, 0x47, 0x8f, 0x93, 0x30, 0x14, 0x64, 0x52, 0x2c, 0x98, 0x87,
	0xc8, 0xcd, 0x61, 0xb3, 0x95, 0x2a, 0x53, 0x33, 0x39, 0x3e, 0x24, 0x6a, 0x68, 0xfa, 0x78, 0x15,
	0xae, 0x56, 0x5a, 0x80, 0x17, 0xe6, 0x02, 0xe1, 0x82, 0x12, 0x4e, 0x15, 0xf3, 0x70, 0x1d, 0x6c,
	0xcf, 0x51, 0x5f, 0xcd, 0x98, 0x8f, 0x9d, 0xb2, 0x19, 0x23, 0x28, 0x1b, 0xaa, 0xf0, 0x49, 0x59,
	0xeb, 0x44, 0x8a, 0x2b, 0x7c, 0x5a, 0xa6, 0x4e, 0x09, 0x27, 0x3e, 0x83, 0x5c, 0x29, 0x1d, 0xa6,
	0x88, 0x80, 0xe7, 0xab, 0x59, 0x3e, 0x4c, 0xc9, 0x60, 0x06, 0x03, 0x41, 0xe9, 0x72, 0xa1, 0x54,
	0x1e, 0x55, 0x52, 0x99, 0x89, 0x20, 0xc7, 0xaf, 0x89, 0xe2, 0x50, 0x4f, 0xed, 0xb2, 0xe6, 0x6b,
	0xf6, 0x02, 0x2e, 0xd7, 0xb9, 0xfc, 0xa6, 0x8a, 0x1c, 0x3d, 0xad, 0xea, 0xf8, 0xd0, 0x39, 0xe5,
	0x05, 0xf7, 0x41, 0x04, 0x35, 0x24, 0x05, 0x8c, 0x47, 0x56, 0x8c, 0xae, 0x65, 0x9a, 0x80, 0x46,
	0x1c, 0x2b, 0x4a, 0xd3, 0x04, 0xd4, 0xc0, 0x48, 0xce, 0x94, 0x99, 0x90, 0x52, 0x19, 0xc6, 0x2b,
	0x27, 0xdf, 0x1f, 0xb2, 0xcf, 0xf1, 0x49, 0xbe, 0x3f, 0xa4, 0x73, 0x2a, 0xd2, 0xd4, 0xd3, 0x00,
	0x05, 0xcf, 0xe1, 0x46, 0xae, 0x40, 0x30, 0x01, 0x8f, 0x6f, 0x6e, 0x00, 0x85, 0x47, 0x17, 0x32,
	0xd3, 0xf0, 0xb9, 0xd6, 0xd0, 0xca, 0x91, 0xe8, 0x9a, 0xf2, 0x39, 0xcc, 0x41, 0x90, 0xab, 0xa9,
	0x91, 0x4c, 0xc1, 0x40, 0x80, 0x3b, 0x39, 0x06, 0x76, 0x6a, 0xac, 0x9b, 0xdf, 0x7e, 0xc4, 0x46,
	0x1a, 0xea, 0xe5, 0x50, 0xc8, 0x3e, 0xd7, 0x10, 0xd6, 0x09, 0x9b, 0x9b, 0xac, 0xc1, 0xb3, 0x5c,
	0x9d, 0x36, 0x1b, 0x30, 0x37, 0xc7, 0xc0, 0x72, 0x8d, 0x9d, 0x97, 0x8c, 0x13, 0xd1, 0x0d, 0xbe,
	0xb8, 0xfc, 0xa6, 0x82, 0xb0, 0xbf, 0x8f, 0x97, 0xdb, 0xcd, 0x6a, 0x49, 0x36, 0xcb, 0xe4, 0x00,
	0x13, 0xfa, 0x03, 0x74, 0x06, 0x45, 0x04, 0xb3, 0x44, 0x58, 0xee, 0xfd, 0x39, 0xac, 0x87, 0x48,
	0x5c, 0x81, 0x63, 0x8a, 0xe0, 0x0c, 0xc6, 0x84, 0x32, 0x11, 0x46, 0x48, 0x93, 0xc3, 0x45, 0x10,
	0x26, 0x48, 0x5c, 0x2f, 0xa3, 0x66, 0x80, 0x34, 0x13, 0x43, 0x8e, 0xc2, 0xfc, 0x88, 0x4f, 0xca,
	0x4a, 0xcd, 0x84, 0x7b, 0x0a, 0x0e, 0xca, 0x41, 0x98, 0x2c, 0x1a, 0x65, 0x8d, 0x66, 0x78, 0x34,
	0xe9, 0x9b, 0xa3, 0x7a, 0x76, 0xc4, 0xe8, 0xf2, 0x4f, 0x35, 0xd4, 0xb4, 0xff, 0x88, 0x81, 0xae,
	0xf0, 0x8a, 0x71, 0x5e, 0xbe, 0xb1, 0x81, 0x48, 0x34, 0xe6, 0x34, 0x62, 0x1e, 0x0c, 0x45, 0x66,
	0x02, 0x05, 0xd0, 0x53, 0x72, 0x48, 0x34, 0x5a, 0xcd, 0x77, 0x87, 0xdc, 0xe4, 0x4e, 0xad, 0x00,
	0x45, 0x94, 0xf0, 0x68, 0x6c, 0x1a, 0x62, 0xba, 0x57, 0x79, 0x44, 0x10, 0xec, 0xe4, 0xa4, 0x31,
	0x0b, 0x23, 0xa9, 0x6e, 0xcc, 0x03, 0x67, 0x20, 0x26, 0xe6, 0xd0, 0xdd, 0x02, 0x12, 0x31, 0x09,
	0xb7, 0xb5, 0xbb, 0x05, 0x89, 0x66, 0x0a, 0x86, 0x43, 0x33, 0x38, 0x73, 0xbe, 0x50, 0x94, 0xb3,
	0x00, 0x58, 0x4d, 0xf7, 0x43, 0xf4, 0x20, 0x3d, 0x43, 0xb0, 0x09, 0xe1, 0x8b, 0x31, 0x11, 0xbe,
	0xee, 0xac, 0x28, 0x3f, 0x8c, 0x89, 0x50, 0x1b, 0xd9, 0xca, 0x35, 0x4c, 0xa8, 0xcf, 0x3c, 0x48,
	0xf2, 0x76, 0x7e, 0xc3, 0x29, 0x55, 0x1e, 0x9d, 0xea, 0xd3, 0x3b, 0x39, 0x33, 0x9c, 0xa9, 0x39,
	0x9b, 0xeb, 0x4e, 0x69, 0x1d, 0xe4, 0xd3, 0x8c, 0xd8, 0x83, 0xae, 0x90, 0x9d, 0x12, 0xb1, 0x09,
	0xf3, 0x8d, 0xf9, 0x38, 0x9d, 0xe8, 0x8d, 0xda, 0x91, 0x54, 0x13, 0x22, 0x3c, 0x8a, 0xcf, 0x4a,
	0xa7, 0x85, 0x33, 0x12, 0x02, 0xd9, 0xbd, 0xfc, 0x43, 0x15, 0xa1, 0xfc, 0xb7, 0x23, 0xb8, 0xfa,
	0x10, 0xfe, 0x6b, 0xc9, 0x63, 0x93, 0x21, 0xc4, 0x93, 0xfc, 0x26, 0xa2, 0x26, 0x15, 0x35, 0xe2,
	0x8d, 0x89, 0xe2, 0xc4, 0xfc, 0x07, 0x75, 0x86, 0x3a, 0x06, 0x53, 0x6c, 0xc2, 0xa0, 0xe5, 0xeb,
	0x44, 0xd4, 0x10, 0x54, 0x8f, 0x82, 0x41, 0x85, 0x42, 0xa7, 0xc8, 0x36, 0x8f, 0x24, 0xbf, 0x5a,
	0x8c, 0xa9, 0x92, 0xd8, 0x81, 0x8b, 0x68, 0x2c, 0x98, 0x31, 0x98, 0xbe, 0x55, 0xc4, 0x42, 0x22,
	0x4c, 0xdb, 0xd0, 0xf8, 0x98, 0xaa, 0x09, 0x4b, 0x27, 0x0f, 0x0d, 0x08, 0x39, 0xe4, 0x69, 0x58,
	0xb4, 0x2c, 0x67, 0x11, 0x27, 0xf0, 0x66, 0x98, 0xce, 0xa1, 0xb1, 0x10, 0xa6, 0x78, 0x64, 0x75,
	0x84, 0x84, 0x71, 0xdd, 0x33, 0xb3, 0xfb, 0x84, 0x92, 0xfb, 0x8c, 0x2a, 0xdc, 0xb6, 0x94, 0x99,
	0xf2, 0xc6, 0x4c, 0xe0, 0xce, 0x73, 0x86, 0x1a, 0xa3, 0x78, 0x99, 0x44, 0xdb, 0x57, 0x89, 0xfb,
	0x0b, 0x18, 0xe5, 0x8f, 0x62, 0xea, 0xb9, 0x8f, 0x8a, 0x3f, 0x5d, 0x15, 0x7e, 0x1e, 0x7d, 0xdc,
	0x7f, 0x77, 0xc1, 0xfc, 0xd6, 0x36, 0xf8, 0x60, 0xf8, 0xe1, 0x8b, 0x47, 0xab, 0xcd, 0x31, 0xd9,
	0x6f, 0xe2, 0xf5, 0xa7, 0xbb, 0x2f, 0x3e, 0xcd, 0x88, 0xf1, 0x6e, 0xf5, 0xc5, 0x89, 0xfe, 0xe1,
	0xf5, 0xc7, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x37, 0x27, 0x07, 0x8f, 0x15, 0x00, 0x00,
}
